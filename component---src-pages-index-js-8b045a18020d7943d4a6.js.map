{"version":3,"sources":["webpack://blog-with-gatsby-web/./src/components/blog-post-preview.js","webpack://blog-with-gatsby-web/./src/components/blog-post-preview.module.css","webpack://blog-with-gatsby-web/./src/components/blog-post-preview-list.js","webpack://blog-with-gatsby-web/./src/components/blog-post-preview-list.module.css","webpack://blog-with-gatsby-web/./src/pages/index.js","webpack://blog-with-gatsby-web/./src/components/typography.module.css"],"names":["props","className","isInList","to","getBlogUrl","publishedAt","slug","current","mainImage","asset","src","imageUrlFor","buildImageObj","width","height","Math","floor","auto","url","alt","cn","responsiveTitle3","title","_rawExcerpt","blocks","format","Date","BlogPostPreviewGrid","nodes","map","node","key","id","browseMoreHref","defaultProps","data","errors","site","postNodes","posts","mapEdgesToNodes","filter","filterOutDocsWithoutSlugs","filterOutDocsPublishedInTheFuture","Error","description","keywords","hidden","responsiveTitle1"],"mappings":"2OA2CA,MAjCA,SAAyBA,GACvB,OACE,gBAAC,KAAD,CACEC,UAAWD,EAAME,SCXD,gFACA,gFDWhBC,IAAIC,QAAWJ,EAAMK,YAAaL,EAAMM,KAAKC,UAE7C,uBAAKN,UCZmB,mDDarBD,EAAMQ,WAAaR,EAAMQ,UAAUC,OAClC,uBACEC,KAAKC,QAAYC,QAAcZ,EAAMQ,YAClCK,MAAM,KACNC,OAAOC,KAAKC,MAAO,QACnBC,KAAK,UACLC,MACHC,IAAKnB,EAAMQ,UAAUW,OAI3B,uBAAKlB,UCvBS,yCDwBZ,sBAAIA,WAAWmB,QAAGC,KCvBL,2CDuBuCrB,EAAMsB,OACzDtB,EAAMuB,aACL,uBAAKtB,UCxBQ,4CDyBX,gBAAC,IAAD,CAAcuB,OAAQxB,EAAMuB,eAGhC,uBAAKtB,UC3BO,0CD4BTwB,OAAO,IAAIC,KAAK1B,EAAMK,aAAc,sB,+HE/B/C,SAASsB,EAAoB3B,GAC3B,OACE,uBAAKC,UCNW,8CDObD,EAAMsB,OAAS,sBAAIrB,UCNF,kDDM+BD,EAAMsB,OACvD,sBAAIrB,UCNU,8CDOXD,EAAM4B,OACL5B,EAAM4B,MAAMC,KAAI,SAACC,GAAD,OACd,sBAAIC,IAAKD,EAAKE,IACZ,gBAAC,IAAD,iBAAqBF,EAArB,CAA2B5B,UAAQ,UAI1CF,EAAMiC,gBACL,uBAAKhC,UCdgB,uFDenB,gBAAC,KAAD,CAAME,GAAIH,EAAMiC,gBAAhB,iBAOVN,EAAoBO,aAAe,CACjCZ,MAAO,GACPM,MAAO,GACPK,eAAgB,IAGlB,Q,wCE+EA,EA7CkB,SAACjC,GAAW,IACpBmC,EAAiBnC,EAAjBmC,KAAMC,EAAWpC,EAAXoC,OAEd,GAAIA,EACF,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAkBA,OAAQA,KAKhC,IAAMC,GAAQF,GAAQ,IAAIE,KACpBC,GAAaH,GAAQ,IAAII,OAC3BC,QAAgBL,EAAKI,OAClBE,OAAOC,MACPD,OAAOE,MACV,GAEJ,IAAKN,EACH,MAAM,IAAIO,MACR,iJAIJ,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEtB,MAAOe,EAAKf,MACZuB,YAAaR,EAAKQ,YAClBC,SAAUT,EAAKS,WAEjB,gBAAC,IAAD,KACE,sBAAIC,QAAM,GAAV,cAAuBV,EAAKf,OAC3BgB,GACC,gBAAC,EAAD,CACEhB,MAAM,oBACNM,MAAOU,EACPL,eAAe,kB,2FCtGpB,MASMe,EAAmB,6CAEnB3B,EAAmB","file":"component---src-pages-index-js-8b045a18020d7943d4a6.js","sourcesContent":["import * as styles from \"./blog-post-preview.module.css\";\nimport { buildImageObj, cn, getBlogUrl } from \"../lib/helpers\";\nimport { Link } from \"gatsby\";\nimport PortableText from \"./portableText\";\nimport React from \"react\";\nimport { format } from \"date-fns\";\nimport { imageUrlFor } from \"../lib/image-url\";\n\nimport { responsiveTitle3 } from \"./typography.module.css\";\n\nfunction BlogPostPreview(props) {\n  return (\n    <Link\n      className={props.isInList ? styles.inList : styles.inGrid}\n      to={getBlogUrl(props.publishedAt, props.slug.current)}\n    >\n      <div className={styles.leadMediaThumb}>\n        {props.mainImage && props.mainImage.asset && (\n          <img\n            src={imageUrlFor(buildImageObj(props.mainImage))\n              .width(600)\n              .height(Math.floor((9 / 16) * 600))\n              .auto(\"format\")\n              .url()}\n            alt={props.mainImage.alt}\n          />\n        )}\n      </div>\n      <div className={styles.text}>\n        <h3 className={cn(responsiveTitle3, styles.title)}>{props.title}</h3>\n        {props._rawExcerpt && (\n          <div className={styles.excerpt}>\n            <PortableText blocks={props._rawExcerpt} />\n          </div>\n        )}\n        <div className={styles.date}>\n          {format(new Date(props.publishedAt), \"MMMM Mo, yyyy\")}\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nexport default BlogPostPreview;\n","// extracted by mini-css-extract-plugin\nexport const root = \"blog-post-preview-module--root--2s4gO\";\nexport const inList = \"blog-post-preview-module--inList--2XJVE blog-post-preview-module--root--2s4gO\";\nexport const inGrid = \"blog-post-preview-module--inGrid--26gTD blog-post-preview-module--root--2s4gO\";\nexport const leadMediaThumb = \"blog-post-preview-module--leadMediaThumb--1LJqw\";\nexport const text = \"blog-post-preview-module--text--1g6NJ\";\nexport const title = \"blog-post-preview-module--title--1OPpe\";\nexport const excerpt = \"blog-post-preview-module--excerpt--3vwlB\";\nexport const date = \"blog-post-preview-module--date--1GxGN\";","import * as styles from \"./blog-post-preview-list.module.css\";\nimport BlogPostPreview from \"./blog-post-preview\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\n\nfunction BlogPostPreviewGrid(props) {\n  return (\n    <div className={styles.root}>\n      {props.title && <h2 className={styles.headline}>{props.title}</h2>}\n      <ul className={styles.grid}>\n        {props.nodes &&\n          props.nodes.map((node) => (\n            <li key={node.id}>\n              <BlogPostPreview {...node} isInList />\n            </li>\n          ))}\n      </ul>\n      {props.browseMoreHref && (\n        <div className={styles.browseMoreNav}>\n          <Link to={props.browseMoreHref}>Browse more</Link>\n        </div>\n      )}\n    </div>\n  );\n}\n\nBlogPostPreviewGrid.defaultProps = {\n  title: \"\",\n  nodes: [],\n  browseMoreHref: \"\",\n};\n\nexport default BlogPostPreviewGrid;\n","// extracted by mini-css-extract-plugin\nexport const root = \"blog-post-preview-list-module--root--1RAME\";\nexport const headline = \"blog-post-preview-list-module--headline--1pEAK\";\nexport const grid = \"blog-post-preview-list-module--grid--h-N_-\";\nexport const browseMoreNav = \"blog-post-preview-list-module--browseMoreNav--JO6n2 typography-module--small--2jpCI\";","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport {\n  filterOutDocsPublishedInTheFuture,\n  filterOutDocsWithoutSlugs,\n  mapEdgesToNodes,\n} from \"../lib/helpers\";\nimport BlogPostPreviewList from \"../components/blog-post-preview-list\";\nimport Container from \"../components/container\";\nimport GraphQLErrorList from \"../components/graphql-error-list\";\nimport SEO from \"../components/seo\";\nimport Layout from \"../containers/layout\";\n\nexport const query = graphql`\n  fragment SanityImage on SanityMainImage {\n    crop {\n      _key\n      _type\n      top\n      bottom\n      left\n      right\n    }\n    hotspot {\n      _key\n      _type\n      x\n      y\n      height\n      width\n    }\n    asset {\n      _id\n    }\n  }\n\n  query IndexPageQuery {\n    site: sanitySiteSettings(_id: { regex: \"/(drafts.|)siteSettings/\" }) {\n      title\n      description\n      keywords\n    }\n    posts: allSanityPost(\n      limit: 6\n      sort: { fields: [publishedAt], order: DESC }\n      filter: { slug: { current: { ne: null } }, publishedAt: { ne: null } }\n    ) {\n      edges {\n        node {\n          id\n          publishedAt\n          mainImage {\n            ...SanityImage\n            alt\n          }\n          title\n          _rawExcerpt\n          slug {\n            current\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst IndexPage = (props) => {\n  const { data, errors } = props;\n\n  if (errors) {\n    return (\n      <Layout>\n        <GraphQLErrorList errors={errors} />\n      </Layout>\n    );\n  }\n\n  const site = (data || {}).site;\n  const postNodes = (data || {}).posts\n    ? mapEdgesToNodes(data.posts)\n        .filter(filterOutDocsWithoutSlugs)\n        .filter(filterOutDocsPublishedInTheFuture)\n    : [];\n\n  if (!site) {\n    throw new Error(\n      'Missing \"Site settings\". Open the studio at http://localhost:3333 and add some content to \"Site settings\" and restart the development server.'\n    );\n  }\n\n  return (\n    <Layout>\n      <SEO\n        title={site.title}\n        description={site.description}\n        keywords={site.keywords}\n      />\n      <Container>\n        <h1 hidden>Welcome to {site.title}</h1>\n        {postNodes && (\n          <BlogPostPreviewList\n            title=\"Latest blog posts\"\n            nodes={postNodes}\n            browseMoreHref=\"/archive/\"\n          />\n        )}\n      </Container>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n","// extracted by mini-css-extract-plugin\nexport const title1 = \"typography-module--title1--3kWAX\";\nexport const title2 = \"typography-module--title2--3MCr0\";\nexport const title3 = \"typography-module--title3--3u4OD\";\nexport const large = \"typography-module--large--1Oqox\";\nexport const base = \"typography-module--base--2DtHq\";\nexport const small = \"typography-module--small--2jpCI\";\nexport const micro = \"typography-module--micro--2S5pr\";\nexport const paragraph = \"typography-module--paragraph--2ZibO\";\nexport const blockQuote = \"typography-module--blockQuote--_U6K9\";\nexport const responsiveTitle1 = \"typography-module--responsiveTitle1--2aak3\";\nexport const responsiveTitle2 = \"typography-module--responsiveTitle2--3J_AG\";\nexport const responsiveTitle3 = \"typography-module--responsiveTitle3--3W4yn\";\nexport const responsiveTitle4 = \"typography-module--responsiveTitle4--1LVBg\";"],"sourceRoot":""}